"""make name fields unique

Revision ID: ff626b100b70
Revises:
Create Date: 2025-07-22 19:59:12.749692

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "ff626b100b70"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "chapters",
        "status",
        existing_type=sa.TEXT(),
        type_=sa.String(),
        nullable=False,
        existing_server_default=sa.text("'awaiting'::text"),
    )
    op.create_unique_constraint(None, "chapters", ["name"])
    op.alter_column(
        "problems",
        "status",
        existing_type=sa.TEXT(),
        type_=sa.String(),
        nullable=False,
        existing_server_default=sa.text("'awaiting'::text"),
    )
    op.create_unique_constraint(None, "problems", ["name"])
    op.alter_column(
        "solutions",
        "status",
        existing_type=sa.TEXT(),
        type_=sa.String(),
        nullable=False,
        existing_server_default=sa.text("'awaiting'::text"),
    )
    op.alter_column(
        "textbooks",
        "status",
        existing_type=sa.TEXT(),
        type_=sa.String(),
        nullable=False,
        existing_server_default=sa.text("'awaiting'::text"),
    )
    op.create_unique_constraint(None, "textbooks", ["name"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "textbooks", type_="unique")
    op.alter_column(
        "textbooks",
        "status",
        existing_type=sa.String(),
        type_=sa.TEXT(),
        nullable=True,
        existing_server_default=sa.text("'awaiting'::text"),
    )
    op.alter_column(
        "solutions",
        "status",
        existing_type=sa.String(),
        type_=sa.TEXT(),
        nullable=True,
        existing_server_default=sa.text("'awaiting'::text"),
    )
    op.drop_constraint(None, "problems", type_="unique")
    op.alter_column(
        "problems",
        "status",
        existing_type=sa.String(),
        type_=sa.TEXT(),
        nullable=True,
        existing_server_default=sa.text("'awaiting'::text"),
    )
    op.drop_constraint(None, "chapters", type_="unique")
    op.alter_column(
        "chapters",
        "status",
        existing_type=sa.String(),
        type_=sa.TEXT(),
        nullable=True,
        existing_server_default=sa.text("'awaiting'::text"),
    )
    # ### end Alembic commands ###
