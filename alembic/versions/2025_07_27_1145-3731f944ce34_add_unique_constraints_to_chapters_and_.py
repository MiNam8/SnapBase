"""Add unique constraints to chapters and problems

Revision ID: 3731f944ce34
Revises: ff626b100b70
Create Date: 2025-07-27 11:45:05.312244

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "3731f944ce34"
down_revision: Union[str, Sequence[str], None] = "ff626b100b70"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("chapters_name_key"), "chapters", type_="unique")
    op.create_unique_constraint(
        "uq_chapter_name_per_textbook", "chapters", ["name", "textbook_id"]
    )
    op.drop_constraint(op.f("problems_name_key"), "problems", type_="unique")
    op.create_unique_constraint(
        "uq_problem_name_per_chapter", "problems", ["name", "chapter_id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "uq_problem_name_per_chapter", "problems", type_="unique"
    )
    op.create_unique_constraint(
        op.f("problems_name_key"),
        "problems",
        ["name"],
        postgresql_nulls_not_distinct=False,
    )
    op.drop_constraint(
        "uq_chapter_name_per_textbook", "chapters", type_="unique"
    )
    op.create_unique_constraint(
        op.f("chapters_name_key"),
        "chapters",
        ["name"],
        postgresql_nulls_not_distinct=False,
    )
    # ### end Alembic commands ###
